{% set filterOptionsHtml %}

  {{ govukCheckboxes({
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: "Cycle",
        isPageHeading: false,
        classes: "govuk-fieldset__legend--m"
      }
    },
    items: [
      {
        text: "2020 to 2021 (Current)",
        checked: checked(query.filterCycle, "2020 to 2021 (Current)")
      },
      {
        text: "2019 to 2020",
        checked: checked(query.filterCycle, "2019 to 2020")
      }
    ]
  } | decorateAttributes(data, "data.filterCycle"))}}

  {% set enabledProgrammes = data.settings.enabledProgrammes %}

  {# Only show route filter if there's more than 1 route #}
  {% if enabledProgrammes | length > 1 %}

    {% set programmeItems = [] %}
    {% for programme in enabledProgrammes %}
      {% set programmeItems = programmeItems | push({
        text: programme,
        checked: checked(query.filterProgrammes, programme)
      }) %}
    {% endfor %}
    {{ govukCheckboxes({
      classes: "govuk-checkboxes--small",
      fieldset: {
        legend: {
          text: "Programmes",
          classes: "govuk-fieldset__legend--m"
        }
      },
      hint: {
        text: ""
      },
      items: programmeItems
    } | decorateAttributes(data, "data.filterProgrammes")) }}
    
  {% endif %}

  {{ govukCheckboxes({
    classes: "govuk-checkboxes--small",
    attributes: {
      "id": 'filterStatusCheckboxes'
    }
    ,
    fieldset: {
      legend: {
        text: "Status",
        isPageHeading: false,
        classes: "govuk-fieldset__legend--m"
      }
    },
    items: [
      {
        text: "Draft",
        checked: checked(query.filterStatus, "Draft")
      },
      {
        text: "Pending TRN",
        checked: checked(query.filterStatus, "Pending TRN")
      },
      {
        text: "TRN received",
        checked: checked(query.filterStatus, "TRN received")
      },
      {
        text: "QTS recommended",
        checked: checked(query.filterStatus, "QTS recommended")
      },
      {
        text: "QTS awarded",
        checked: checked(query.filterStatus, "QTS awarded")
      },
      {
        text: "Deferred",
        checked: checked(query.filterStatus, "Deferred")
      },
      {
        text: "Withdrawn",
        checked: checked(query.filterStatus, "Withdrawn")
      }
    ]
  } | decorateAttributes(data, "data.filterStatus"))}}


  {% set subjectItems = [] %}

  {# Default state - first value is 'all' #}
  {% set subjectItems = subjectItems | push({
    value: "All subjects",
    text: "All subjects",
    selected: true if (not query.filterSubject or query.filterSubject ==  "All subjects")
  }) %}
  
  {# Remaining subjects #}
  {% for subject in data.ittSubjects %}
    {% set subjectItems = subjectItems | push({
      value: subject,
      text: subject,
      selected: true if (subject == query.filterSubject)
    }) %}
  {% endfor %}

  {{ govukSelect({
    id: "subject-select",
    name: "filterSubject",
    label: {
      text: "Subject"
    },
    items: subjectItems
  }) }}

  {# Disabled because of usability issues with clearing answer #}
  {# {{ appAutocomplete({
    label: {
      text: "Subject",
      classes: "govuk-label--s"
    },
    id: 'subject',
    name: "filterSubject",
    autoSelect: false,
    items: subjects,
    value: query.filterSubject
    }
  ) }} #}

{% endset %}

<div class="moj-filter" tabindex="-1">
  <div class="moj-filter__header">
    <div class="moj-filter__header-title">
      <h2 class="govuk-heading-m">Filters</h2>
    </div>
    <div class="moj-filter__header-action"></div>
  </div>
  <div class="moj-filter__content">
    {% if selectedFilters %}
      <div class="moj-filter__selected">
        <div class="moj-filter__selected-heading">
          <div class="moj-filter__heading-title">
            <h2 class="govuk-heading-m">Selected filters</h2>
          </div>
          <div class="moj-filter__heading-action">
            <p><a class="govuk-link govuk-link--no-visited-state" href="/records">Clear</a></p>
          </div>
        </div>

        {% for category in selectedFilters.categories %}
          <h3 class="govuk-heading-s govuk-!-margin-bottom-0">{{ category.heading.text }}</h3>
          <ul class="moj-filter-tags">
            {% for item in category.items %}
              <li><a class="moj-filter__tag" href="{{item.href}}"><span class="govuk-visually-hidden">Remove this filter</span> {{item.text}}</a></li>
            {% endfor %}
          </ul>
        {% endfor %}
      </div>
    {% endif %}
    <div class="moj-filter__options">
      {# Button for no-js only #}
      <button class="govuk-button app-no-js-only" data-module="govuk-button">
        Apply filters
      </button>
      {{filterOptionsHtml | safe}}
      <script>

      </script>
    </div>
  </div>
</div>
